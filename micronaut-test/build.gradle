plugins {
    id 'java'
    id 'application'
    id "com.github.johnrengelman.shadow"
    id "net.ltgt.apt-idea"
}

sourceCompatibility = 11
targetCompatibility = 11

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    annotationProcessor 'io.micronaut:micronaut-graal'

    // Automatically added with the 'file-watch' feature in the CLi
    developmentOnly "io.micronaut:micronaut-runtime-osx"
    developmentOnly "net.java.dev.jna:jna"
    developmentOnly "io.methvin:directory-watcher"

    implementation "com.github.ixtf.japp:core"
    implementation 'javax.annotation:javax.annotation-api'

    implementation "io.micronaut:micronaut-management"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-tracing"
    implementation "io.jaegertracing:jaeger-thrift"
    implementation "io.micronaut.configuration:micronaut-mongo-reactive"
    implementation "io.micronaut.configuration:micronaut-redis-lettuce"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
//    options.compilerArgs.add('-parameters')
    options.compilerArgs = [
            '-parameters',
            '-Amicronaut.processing.incremental=true',
            '-Amicronaut.processing.annotations=org.jzb.test.micronaut.*',
    ]
}

shadowJar {
    mergeServiceFiles()
}

mainClassName = "org.jzb.test.micronaut.Micronaut"
run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
